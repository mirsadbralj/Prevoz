// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prevoz.WebAPI.Database;

namespace Prevoz.WebAPI.Migrations
{
    [DbContext(typeof(PrevozContext))]
    [Migration("20210925134459_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:Collation", "Croatian_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Prevoz.WebAPI.Database.Faq", b =>
                {
                    b.Property<int>("Faqid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FAQID")
                        .UseIdentityColumn();

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Odgovor")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Pitanje")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Faqid");

                    b.HasIndex("KorisnikId");

                    b.ToTable("FAQ");

                    b.HasData(
                        new
                        {
                            Faqid = 1,
                            KorisnikId = 2,
                            Odgovor = "",
                            Pitanje = "Pitanje br.1"
                        },
                        new
                        {
                            Faqid = 2,
                            KorisnikId = 2,
                            Odgovor = "",
                            Pitanje = "Pitanje br.1"
                        },
                        new
                        {
                            Faqid = 3,
                            KorisnikId = 2,
                            Odgovor = "",
                            Pitanje = "Pitanje br.1"
                        },
                        new
                        {
                            Faqid = 4,
                            KorisnikId = 3,
                            Odgovor = "",
                            Pitanje = "Pitanje br.2"
                        },
                        new
                        {
                            Faqid = 5,
                            KorisnikId = 3,
                            Odgovor = "",
                            Pitanje = "Pitanje br.2"
                        },
                        new
                        {
                            Faqid = 6,
                            KorisnikId = 3,
                            Odgovor = "",
                            Pitanje = "Pitanje br.2"
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FeedbackID")
                        .UseIdentityColumn();

                    b.Property<string>("Komentar")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int>("Ocjena")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime")
                        .HasColumnName("ModifiedAT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("text");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .UseCollation("Latin1_General_CS_AS");

                    b.HasKey("KorisnikId");

                    b.ToTable("Korisnik");

                    b.HasData(
                        new
                        {
                            KorisnikId = 1,
                            CreatedAt = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "Hkygp3aJFIgOMtbHckDaXN5HYBA=",
                            PasswordSalt = "DMUTs++b9XRsy8TQxXWtzw==",
                            UserName = "admineditor1"
                        },
                        new
                        {
                            KorisnikId = 2,
                            CreatedAt = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "Hkygp3aJFIgOMtbHckDaXN5HYBA=",
                            PasswordSalt = "DMUTs++b9XRsy8TQxXWtzw==",
                            UserName = "Korisnik"
                        },
                        new
                        {
                            KorisnikId = 3,
                            CreatedAt = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "Hkygp3aJFIgOMtbHckDaXN5HYBA=",
                            PasswordSalt = "DMUTs++b9XRsy8TQxXWtzw==",
                            UserName = "Korisnik2"
                        },
                        new
                        {
                            KorisnikId = 4,
                            CreatedAt = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "Hkygp3aJFIgOMtbHckDaXN5HYBA=",
                            PasswordSalt = "DMUTs++b9XRsy8TQxXWtzw==",
                            UserName = "Korisnik3"
                        },
                        new
                        {
                            KorisnikId = 5,
                            CreatedAt = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedAt = new DateTime(2021, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = "Hkygp3aJFIgOMtbHckDaXN5HYBA=",
                            PasswordSalt = "DMUTs++b9XRsy8TQxXWtzw==",
                            UserName = "headadministrator1"
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.KorisnikDetails", b =>
                {
                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<DateTime?>("DatumRođenja")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Lokacija")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telefon")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("KorisnikId")
                        .HasName("PK__Korisnik__80B06D614EBF07A9");

                    b.HasIndex("Lokacija");

                    b.ToTable("KorisnikDetails");

                    b.HasData(
                        new
                        {
                            KorisnikId = 1,
                            DatumRođenja = new DateTime(1990, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "headadmin@edu.fit.ba",
                            Ime = "headadmin",
                            Lokacija = 1,
                            Prezime = "headadmin",
                            Telefon = "124578324"
                        },
                        new
                        {
                            KorisnikId = 2,
                            DatumRođenja = new DateTime(1993, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "korisnik@gmail.com",
                            Ime = "Korisnik",
                            Lokacija = 2,
                            Prezime = "Korisnik",
                            Telefon = "521353795"
                        },
                        new
                        {
                            KorisnikId = 3,
                            DatumRođenja = new DateTime(1999, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@gmail.com",
                            Ime = "user3",
                            Lokacija = 3,
                            Prezime = "user3",
                            Telefon = "945124906"
                        },
                        new
                        {
                            KorisnikId = 4,
                            DatumRođenja = new DateTime(1992, 1, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user4@gmail.com",
                            Ime = "user4",
                            Lokacija = 4,
                            Prezime = "user4",
                            Telefon = "4745476"
                        },
                        new
                        {
                            KorisnikId = 5,
                            DatumRođenja = new DateTime(2000, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admineditor@edu.fit.ba",
                            Ime = "admineditor",
                            Lokacija = 2,
                            Prezime = "admineditor",
                            Telefon = "246790212"
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.KorisnikRezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RezervacijaID")
                        .UseIdentityColumn();

                    b.Property<int?>("BrojSjedista")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<decimal?>("UkupnoPlaceno")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("VoznjaId")
                        .HasColumnType("int")
                        .HasColumnName("VoznjaID");

                    b.HasKey("RezervacijaId")
                        .HasName("PK__Korisnik__CABA44FDD8B8A748");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("VoznjaId");

                    b.ToTable("KorisnikRezervacija");

                    b.HasData(
                        new
                        {
                            RezervacijaId = 1,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            UkupnoPlaceno = 5m,
                            VoznjaId = 1
                        },
                        new
                        {
                            RezervacijaId = 2,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            UkupnoPlaceno = 6m,
                            VoznjaId = 2
                        },
                        new
                        {
                            RezervacijaId = 3,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            UkupnoPlaceno = 7m,
                            VoznjaId = 7
                        },
                        new
                        {
                            RezervacijaId = 4,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            UkupnoPlaceno = 8m,
                            VoznjaId = 8
                        },
                        new
                        {
                            RezervacijaId = 5,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            UkupnoPlaceno = 11m,
                            VoznjaId = 9
                        },
                        new
                        {
                            RezervacijaId = 6,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            UkupnoPlaceno = 22m,
                            VoznjaId = 10
                        },
                        new
                        {
                            RezervacijaId = 7,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            UkupnoPlaceno = 8m,
                            VoznjaId = 8
                        },
                        new
                        {
                            RezervacijaId = 8,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            UkupnoPlaceno = 11m,
                            VoznjaId = 9
                        },
                        new
                        {
                            RezervacijaId = 9,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            UkupnoPlaceno = 6m,
                            VoznjaId = 12
                        },
                        new
                        {
                            RezervacijaId = 10,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            UkupnoPlaceno = 5m,
                            VoznjaId = 1
                        },
                        new
                        {
                            RezervacijaId = 11,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            UkupnoPlaceno = 6m,
                            VoznjaId = 12
                        },
                        new
                        {
                            RezervacijaId = 12,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            UkupnoPlaceno = 10m,
                            VoznjaId = 13
                        },
                        new
                        {
                            RezervacijaId = 13,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            UkupnoPlaceno = 7m,
                            VoznjaId = 1
                        },
                        new
                        {
                            RezervacijaId = 14,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            UkupnoPlaceno = 5m,
                            VoznjaId = 2
                        },
                        new
                        {
                            RezervacijaId = 15,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            UkupnoPlaceno = 5m,
                            VoznjaId = 15
                        },
                        new
                        {
                            RezervacijaId = 16,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            UkupnoPlaceno = 5m,
                            VoznjaId = 15
                        },
                        new
                        {
                            RezervacijaId = 17,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            UkupnoPlaceno = 5m,
                            VoznjaId = 15
                        },
                        new
                        {
                            RezervacijaId = 18,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            UkupnoPlaceno = 7m,
                            VoznjaId = 13
                        },
                        new
                        {
                            RezervacijaId = 19,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            UkupnoPlaceno = 10m,
                            VoznjaId = 4
                        },
                        new
                        {
                            RezervacijaId = 20,
                            BrojSjedista = 1,
                            DatumRezervacije = new DateTime(2021, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            UkupnoPlaceno = 15m,
                            VoznjaId = 6
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.KorisnikUloga", b =>
                {
                    b.Property<int>("KorisnikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KorisnikUlogaID")
                        .UseIdentityColumn();

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int")
                        .HasColumnName("UlogaID");

                    b.HasKey("KorisnikUlogaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("UlogaId");

                    b.ToTable("KorisnikUloga");

                    b.HasData(
                        new
                        {
                            KorisnikUlogaId = 1,
                            KorisnikId = 1,
                            UlogaId = 1
                        },
                        new
                        {
                            KorisnikUlogaId = 2,
                            KorisnikId = 2,
                            UlogaId = 2
                        },
                        new
                        {
                            KorisnikUlogaId = 3,
                            KorisnikId = 3,
                            UlogaId = 2
                        },
                        new
                        {
                            KorisnikUlogaId = 4,
                            KorisnikId = 4,
                            UlogaId = 2
                        },
                        new
                        {
                            KorisnikUlogaId = 5,
                            KorisnikId = 5,
                            UlogaId = 3
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Lokacija", b =>
                {
                    b.Property<int>("LokacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LokacijaID")
                        .UseIdentityColumn();

                    b.Property<string>("Latitude")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("LokacijaId");

                    b.ToTable("Lokacija");

                    b.HasData(
                        new
                        {
                            LokacijaId = 1,
                            Latitude = "",
                            Longitude = "",
                            Naziv = "Mostar",
                            PostalCode = "88000"
                        },
                        new
                        {
                            LokacijaId = 2,
                            Latitude = "",
                            Longitude = "",
                            Naziv = "Sarajevo",
                            PostalCode = "2231"
                        },
                        new
                        {
                            LokacijaId = 3,
                            Latitude = "",
                            Longitude = "",
                            Naziv = "Zenica",
                            PostalCode = "1233"
                        },
                        new
                        {
                            LokacijaId = 4,
                            Latitude = "",
                            Longitude = "",
                            Naziv = "Grude",
                            PostalCode = "213213"
                        },
                        new
                        {
                            LokacijaId = 5,
                            Latitude = "",
                            Longitude = "",
                            Naziv = "Livno",
                            PostalCode = "1231231"
                        },
                        new
                        {
                            LokacijaId = 6,
                            Latitude = "",
                            Longitude = "",
                            Naziv = "Tuzla",
                            PostalCode = "795986"
                        },
                        new
                        {
                            LokacijaId = 7,
                            Latitude = "",
                            Longitude = "",
                            Naziv = "Bihać",
                            PostalCode = "84584"
                        },
                        new
                        {
                            LokacijaId = 8,
                            Latitude = "",
                            Longitude = "",
                            Naziv = "Banja Luka",
                            PostalCode = "548486"
                        },
                        new
                        {
                            LokacijaId = 9,
                            Latitude = "",
                            Longitude = "",
                            Naziv = "Čapljina",
                            PostalCode = "846846"
                        },
                        new
                        {
                            LokacijaId = 10,
                            Latitude = "",
                            Longitude = "",
                            Naziv = "Visoko",
                            PostalCode = "468484"
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Ocjena", b =>
                {
                    b.Property<int>("OcjenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OcjenaID")
                        .UseIdentityColumn();

                    b.Property<string>("Komentar")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<int>("Ocjena1")
                        .HasColumnType("int")
                        .HasColumnName("Ocjena");

                    b.Property<int?>("RezervacijaId")
                        .HasColumnType("int")
                        .HasColumnName("RezervacijaID");

                    b.Property<int?>("VoznjaId")
                        .HasColumnType("int")
                        .HasColumnName("VoznjaID");

                    b.HasKey("OcjenaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RezervacijaId");

                    b.HasIndex("VoznjaId");

                    b.ToTable("Ocjena");

                    b.HasData(
                        new
                        {
                            OcjenaId = 1,
                            Komentar = "Ugodna vožnja, preporuke.",
                            KorisnikId = 4,
                            Ocjena1 = 5,
                            VoznjaId = 1
                        },
                        new
                        {
                            OcjenaId = 2,
                            Komentar = "Preporučujem.",
                            KorisnikId = 3,
                            Ocjena1 = 5,
                            VoznjaId = 1
                        },
                        new
                        {
                            OcjenaId = 3,
                            Komentar = "Preporučujem kao saputnika.",
                            KorisnikId = 2,
                            Ocjena1 = 5,
                            RezervacijaId = 10
                        },
                        new
                        {
                            OcjenaId = 4,
                            Komentar = "Vrlo dobro",
                            KorisnikId = 3,
                            Ocjena1 = 4,
                            RezervacijaId = 1
                        },
                        new
                        {
                            OcjenaId = 5,
                            Komentar = "Odlična osoba, dobar saputnik, preporučujem.",
                            KorisnikId = 3,
                            Ocjena1 = 4,
                            RezervacijaId = 14
                        },
                        new
                        {
                            OcjenaId = 6,
                            Komentar = "Odličan vozač",
                            KorisnikId = 4,
                            Ocjena1 = 5,
                            VoznjaId = 2
                        },
                        new
                        {
                            OcjenaId = 7,
                            Komentar = "Odličan vozač",
                            KorisnikId = 2,
                            Ocjena1 = 5,
                            VoznjaId = 2
                        },
                        new
                        {
                            OcjenaId = 8,
                            Komentar = "Ugodna vožnja",
                            KorisnikId = 2,
                            Ocjena1 = 5,
                            VoznjaId = 12
                        },
                        new
                        {
                            OcjenaId = 9,
                            Komentar = "OK.",
                            KorisnikId = 3,
                            Ocjena1 = 3,
                            VoznjaId = 12
                        },
                        new
                        {
                            OcjenaId = 10,
                            Komentar = "OK.",
                            KorisnikId = 3,
                            Ocjena1 = 4,
                            VoznjaId = 3
                        },
                        new
                        {
                            OcjenaId = 11,
                            Komentar = "OK.",
                            KorisnikId = 4,
                            Ocjena1 = 4,
                            VoznjaId = 3
                        },
                        new
                        {
                            OcjenaId = 12,
                            Komentar = "Super.",
                            KorisnikId = 4,
                            Ocjena1 = 5,
                            VoznjaId = 4
                        },
                        new
                        {
                            OcjenaId = 13,
                            Komentar = "Super vožnja.",
                            KorisnikId = 2,
                            Ocjena1 = 5,
                            VoznjaId = 4
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Poruka", b =>
                {
                    b.Property<int>("PorukaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PorukaID")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DatumVrijeme")
                        .HasColumnType("datetime");

                    b.Property<int>("PosiljaocId")
                        .HasColumnType("int")
                        .HasColumnName("PosiljaocID");

                    b.Property<int>("PrimaocId")
                        .HasColumnType("int")
                        .HasColumnName("PrimaocID");

                    b.Property<string>("Sadrzaj")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PorukaId");

                    b.HasIndex("PosiljaocId");

                    b.HasIndex("PrimaocId");

                    b.ToTable("Poruka");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PostID")
                        .UseIdentityColumn();

                    b.Property<string>("Body")
                        .HasColumnType("text")
                        .HasColumnName("BODY");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PostId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Post");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            Body = "Ovo može biti tvoje najbolje i najjeftinije putovanje do sada",
                            KorisnikId = 1,
                            Title = "Tražiš prevoz"
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Uloge", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UlogaID")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("UlogaId")
                        .HasName("PK__Uloge__DCAB23EB26C01165");

                    b.ToTable("Uloge");

                    b.HasData(
                        new
                        {
                            UlogaId = 1,
                            Naziv = "admin/editor",
                            Opis = "Permisije nad upravljanjem korisnicima, (Uklanjanje korisnika i dodijeljivanje permisije (admin/editor) nekom od korisnika"
                        },
                        new
                        {
                            UlogaId = 2,
                            Naziv = "korisnik",
                            Opis = "Korisnik funkcionalnosti aplikacije"
                        },
                        new
                        {
                            UlogaId = 3,
                            Naziv = "headadmin",
                            Opis = "Permisije nad upravljanjem korisnicima, (Uklanjanje korisnika i dodijeljivanje permisije (admin/editor) nekom od korisnika, mogućnost uklanjanja (admineditor) korisnika i oduzimanja permisija i dodijeljivanja istih."
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Uplate", b =>
                {
                    b.Property<int>("UplateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UplateID")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DatumUplate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Iznos")
                        .HasColumnType("decimal(7,2)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.HasKey("UplateId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Uplate");

                    b.HasData(
                        new
                        {
                            UplateId = 1,
                            Iznos = 100m,
                            KorisnikId = 2
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Vozilo", b =>
                {
                    b.Property<int>("VoziloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoziloID")
                        .UseIdentityColumn();

                    b.Property<string>("Boja")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("MarkaVozila")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("VoziloId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("Vozilo");

                    b.HasData(
                        new
                        {
                            VoziloId = 1,
                            Boja = "Bijela",
                            KorisnikId = 1,
                            MarkaVozila = "Volkswagen",
                            Naziv = "Golf 7"
                        },
                        new
                        {
                            VoziloId = 2,
                            Boja = "Crna",
                            KorisnikId = 2,
                            MarkaVozila = "BMW",
                            Naziv = "BMW 5"
                        },
                        new
                        {
                            VoziloId = 3,
                            Boja = "Siva",
                            KorisnikId = 3,
                            MarkaVozila = "Volkswagen",
                            Naziv = "Passat 8"
                        },
                        new
                        {
                            VoziloId = 4,
                            Boja = "Crna",
                            KorisnikId = 4,
                            MarkaVozila = "Mercedes",
                            Naziv = "Golf 5"
                        },
                        new
                        {
                            VoziloId = 5,
                            Boja = "Crvena",
                            KorisnikId = 5,
                            MarkaVozila = "Audi",
                            Naziv = "Audi A5"
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Voznja", b =>
                {
                    b.Property<int>("VoznjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoznjaID")
                        .UseIdentityColumn();

                    b.Property<string>("AutomatskoOdobrenje")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int?>("BrojSjedista")
                        .HasColumnType("int");

                    b.Property<string>("Cigarete")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<decimal?>("CijenaSjedista")
                        .HasColumnType("decimal(5,2)");

                    b.Property<DateTime>("DatumVoznje")
                        .HasColumnType("datetime");

                    b.Property<string>("Detaljnije")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndId")
                        .HasColumnType("int")
                        .HasColumnName("EndID");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("KucniLjubimci")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("KucniLJubimci");

                    b.Property<int>("StartId")
                        .HasColumnType("int")
                        .HasColumnName("StartID");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("STATUS");

                    b.Property<int?>("VoziloId")
                        .HasColumnType("int")
                        .HasColumnName("VoziloID");

                    b.HasKey("VoznjaId");

                    b.HasIndex("EndId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("StartId");

                    b.HasIndex("VoziloId");

                    b.ToTable("Voznja");

                    b.HasData(
                        new
                        {
                            VoznjaId = 1,
                            BrojSjedista = 3,
                            CijenaSjedista = 5m,
                            DatumVoznje = new DateTime(2021, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 2,
                            KorisnikId = 2,
                            StartId = 1,
                            Status = true,
                            VoziloId = 2
                        },
                        new
                        {
                            VoznjaId = 2,
                            BrojSjedista = 3,
                            CijenaSjedista = 6m,
                            DatumVoznje = new DateTime(2021, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 2,
                            KorisnikId = 3,
                            StartId = 1,
                            Status = true,
                            VoziloId = 3
                        },
                        new
                        {
                            VoznjaId = 3,
                            BrojSjedista = 3,
                            CijenaSjedista = 7m,
                            DatumVoznje = new DateTime(2021, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 2,
                            KorisnikId = 2,
                            StartId = 2,
                            Status = true,
                            VoziloId = 2
                        },
                        new
                        {
                            VoznjaId = 4,
                            BrojSjedista = 3,
                            CijenaSjedista = 10m,
                            DatumVoznje = new DateTime(2021, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 2,
                            KorisnikId = 3,
                            StartId = 1,
                            Status = true,
                            VoziloId = 3
                        },
                        new
                        {
                            VoznjaId = 5,
                            BrojSjedista = 3,
                            CijenaSjedista = 12m,
                            DatumVoznje = new DateTime(2021, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 8,
                            KorisnikId = 3,
                            StartId = 1,
                            Status = true,
                            VoziloId = 3
                        },
                        new
                        {
                            VoznjaId = 6,
                            BrojSjedista = 3,
                            CijenaSjedista = 15m,
                            DatumVoznje = new DateTime(2021, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 8,
                            KorisnikId = 3,
                            StartId = 1,
                            Status = true,
                            VoziloId = 3
                        },
                        new
                        {
                            VoznjaId = 7,
                            BrojSjedista = 3,
                            CijenaSjedista = 7m,
                            DatumVoznje = new DateTime(2021, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 3,
                            KorisnikId = 4,
                            StartId = 2,
                            Status = true,
                            VoziloId = 4
                        },
                        new
                        {
                            VoznjaId = 8,
                            BrojSjedista = 3,
                            CijenaSjedista = 8m,
                            DatumVoznje = new DateTime(2021, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 3,
                            KorisnikId = 4,
                            StartId = 2,
                            Status = true,
                            VoziloId = 4
                        },
                        new
                        {
                            VoznjaId = 9,
                            BrojSjedista = 3,
                            CijenaSjedista = 11m,
                            DatumVoznje = new DateTime(2021, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 4,
                            KorisnikId = 4,
                            StartId = 3,
                            Status = true,
                            VoziloId = 4
                        },
                        new
                        {
                            VoznjaId = 10,
                            BrojSjedista = 3,
                            CijenaSjedista = 22m,
                            DatumVoznje = new DateTime(2021, 9, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 6,
                            KorisnikId = 2,
                            StartId = 5,
                            Status = true,
                            VoziloId = 2
                        },
                        new
                        {
                            VoznjaId = 11,
                            BrojSjedista = 3,
                            CijenaSjedista = 10m,
                            DatumVoznje = new DateTime(2021, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 6,
                            KorisnikId = 2,
                            StartId = 5,
                            Status = true,
                            VoziloId = 2
                        },
                        new
                        {
                            VoznjaId = 12,
                            BrojSjedista = 3,
                            CijenaSjedista = 6m,
                            DatumVoznje = new DateTime(2021, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 9,
                            KorisnikId = 4,
                            StartId = 5,
                            Status = true,
                            VoziloId = 3
                        },
                        new
                        {
                            VoznjaId = 13,
                            BrojSjedista = 3,
                            CijenaSjedista = 10m,
                            DatumVoznje = new DateTime(2021, 9, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 6,
                            KorisnikId = 4,
                            StartId = 2,
                            Status = true,
                            VoziloId = 3
                        },
                        new
                        {
                            VoznjaId = 14,
                            BrojSjedista = 3,
                            CijenaSjedista = 10m,
                            DatumVoznje = new DateTime(2021, 9, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 9,
                            KorisnikId = 3,
                            StartId = 1,
                            Status = true,
                            VoziloId = 3
                        },
                        new
                        {
                            VoznjaId = 15,
                            BrojSjedista = 3,
                            CijenaSjedista = 5m,
                            DatumVoznje = new DateTime(2021, 9, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndId = 2,
                            KorisnikId = 2,
                            StartId = 1,
                            Status = true,
                            VoziloId = 2
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Zahtjevi", b =>
                {
                    b.Property<int>("ZahtjevId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ZahtjevID")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("KorisnikID");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("VoznjaId")
                        .HasColumnType("int")
                        .HasColumnName("VoznjaID");

                    b.HasKey("ZahtjevId")
                        .HasName("PK__Zahtjevi__62CC7BBD2EA343E5");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("VoznjaId");

                    b.ToTable("Zahtjevi");

                    b.HasData(
                        new
                        {
                            ZahtjevId = 1,
                            Datum = new DateTime(2021, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            VoznjaId = 13
                        },
                        new
                        {
                            ZahtjevId = 2,
                            Datum = new DateTime(2021, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            VoznjaId = 7
                        },
                        new
                        {
                            ZahtjevId = 3,
                            Datum = new DateTime(2021, 9, 25, 15, 44, 59, 160, DateTimeKind.Local).AddTicks(2610),
                            KorisnikId = 2,
                            VoznjaId = 12
                        },
                        new
                        {
                            ZahtjevId = 4,
                            Datum = new DateTime(2021, 9, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 3,
                            VoznjaId = 5
                        },
                        new
                        {
                            ZahtjevId = 5,
                            Datum = new DateTime(2021, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            VoznjaId = 6
                        },
                        new
                        {
                            ZahtjevId = 6,
                            Datum = new DateTime(2021, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 2,
                            VoznjaId = 1
                        },
                        new
                        {
                            ZahtjevId = 7,
                            Datum = new DateTime(2021, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            VoznjaId = 10
                        },
                        new
                        {
                            ZahtjevId = 8,
                            Datum = new DateTime(2021, 9, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            VoznjaId = 11
                        },
                        new
                        {
                            ZahtjevId = 9,
                            Datum = new DateTime(2021, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            VoznjaId = 14
                        },
                        new
                        {
                            ZahtjevId = 10,
                            Datum = new DateTime(2021, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            KorisnikId = 4,
                            VoznjaId = 15
                        });
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Faq", b =>
                {
                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Faqs")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__FAQ__KorisnikID__2B3F6F97")
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Feedback", b =>
                {
                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Feedbacks")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Feedback__Korisn__4CA06362")
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.KorisnikDetails", b =>
                {
                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Korisnik")
                        .WithOne("KorisnikDetail")
                        .HasForeignKey("Prevoz.WebAPI.Database.KorisnikDetails", "KorisnikId")
                        .HasConstraintName("FK__KorisnikD__Koris__48CFD27E")
                        .IsRequired();

                    b.HasOne("Prevoz.WebAPI.Database.Lokacija", "LokacijaNavigation")
                        .WithMany("KorisnikDetails")
                        .HasForeignKey("Lokacija")
                        .HasConstraintName("FK__KorisnikD__Lokac__49C3F6B7");

                    b.Navigation("Korisnik");

                    b.Navigation("LokacijaNavigation");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.KorisnikRezervacija", b =>
                {
                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("KorisnikRezervacijas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__KorisnikR__Koris__3F466844")
                        .IsRequired();

                    b.HasOne("Prevoz.WebAPI.Database.Voznja", "Voznja")
                        .WithMany("KorisnikRezervacijas")
                        .HasForeignKey("VoznjaId")
                        .HasConstraintName("FK__KorisnikR__Voznj__403A8C7D")
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Voznja");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.KorisnikUloga", b =>
                {
                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("KorisnikUlogas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__KorisnikU__Koris__35BCFE0A")
                        .IsRequired();

                    b.HasOne("Prevoz.WebAPI.Database.Uloge", "Uloga")
                        .WithMany("KorisnikUlogas")
                        .HasForeignKey("UlogaId")
                        .HasConstraintName("FK__KorisnikU__Uloga__36B12243")
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Uloga");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Ocjena", b =>
                {
                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Ocjenas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Ocjena__Korisnik__44FF419A")
                        .IsRequired();

                    b.HasOne("Prevoz.WebAPI.Database.KorisnikRezervacija", "Rezervacija")
                        .WithMany("Ocjenas")
                        .HasForeignKey("RezervacijaId")
                        .HasConstraintName("FK__Ocjena__Rezervac__45F365D3");

                    b.HasOne("Prevoz.WebAPI.Database.Voznja", "Voznja")
                        .WithMany("Ocjenas")
                        .HasForeignKey("VoznjaId")
                        .HasConstraintName("FK__Ocjena__VoznjaID__440B1D61");

                    b.Navigation("Korisnik");

                    b.Navigation("Rezervacija");

                    b.Navigation("Voznja");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Poruka", b =>
                {
                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Posiljaoc")
                        .WithMany("PorukaPosiljaocs")
                        .HasForeignKey("PosiljaocId")
                        .HasConstraintName("FK__Poruka__Posiljao__6FE99F9F")
                        .IsRequired();

                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Primaoc")
                        .WithMany("PorukaPrimaocs")
                        .HasForeignKey("PrimaocId")
                        .HasConstraintName("FK__Poruka__PrimaocI__70DDC3D8")
                        .IsRequired();

                    b.Navigation("Posiljaoc");

                    b.Navigation("Primaoc");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Post", b =>
                {
                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Posts")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Post__KorisnikID__286302EC")
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Uplate", b =>
                {
                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Uplates")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Uplate__Korisnik__02FC7413")
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Vozilo", b =>
                {
                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Vozilos")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Vozilo__Korisnik__2E1BDC42")
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Voznja", b =>
                {
                    b.HasOne("Prevoz.WebAPI.Database.Lokacija", "End")
                        .WithMany("VoznjaEnds")
                        .HasForeignKey("EndId")
                        .HasConstraintName("FK__Voznja__EndID__3B75D760")
                        .IsRequired();

                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Voznjas")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Voznja__Korisnik__398D8EEE")
                        .IsRequired();

                    b.HasOne("Prevoz.WebAPI.Database.Lokacija", "Start")
                        .WithMany("VoznjaStarts")
                        .HasForeignKey("StartId")
                        .HasConstraintName("FK__Voznja__StartID__3A81B327")
                        .IsRequired();

                    b.HasOne("Prevoz.WebAPI.Database.Vozilo", "Vozilo")
                        .WithMany("Voznjas")
                        .HasForeignKey("VoziloId")
                        .HasConstraintName("FK__Voznja__VoziloID__3C69FB99");

                    b.Navigation("End");

                    b.Navigation("Korisnik");

                    b.Navigation("Start");

                    b.Navigation("Vozilo");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Zahtjevi", b =>
                {
                    b.HasOne("Prevoz.WebAPI.Database.Korisnik", "Korisnik")
                        .WithMany("Zahtjevis")
                        .HasForeignKey("KorisnikId")
                        .HasConstraintName("FK__Zahtjevi__Korisn__160F4887")
                        .IsRequired();

                    b.HasOne("Prevoz.WebAPI.Database.Voznja", "Voznja")
                        .WithMany("Zahtjevis")
                        .HasForeignKey("VoznjaId")
                        .HasConstraintName("FK__Zahtjevi__Voznja__17036CC0")
                        .IsRequired();

                    b.Navigation("Korisnik");

                    b.Navigation("Voznja");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Korisnik", b =>
                {
                    b.Navigation("Faqs");

                    b.Navigation("Feedbacks");

                    b.Navigation("KorisnikDetail");

                    b.Navigation("KorisnikRezervacijas");

                    b.Navigation("KorisnikUlogas");

                    b.Navigation("Ocjenas");

                    b.Navigation("PorukaPosiljaocs");

                    b.Navigation("PorukaPrimaocs");

                    b.Navigation("Posts");

                    b.Navigation("Uplates");

                    b.Navigation("Vozilos");

                    b.Navigation("Voznjas");

                    b.Navigation("Zahtjevis");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.KorisnikRezervacija", b =>
                {
                    b.Navigation("Ocjenas");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Lokacija", b =>
                {
                    b.Navigation("KorisnikDetails");

                    b.Navigation("VoznjaEnds");

                    b.Navigation("VoznjaStarts");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Uloge", b =>
                {
                    b.Navigation("KorisnikUlogas");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Vozilo", b =>
                {
                    b.Navigation("Voznjas");
                });

            modelBuilder.Entity("Prevoz.WebAPI.Database.Voznja", b =>
                {
                    b.Navigation("KorisnikRezervacijas");

                    b.Navigation("Ocjenas");

                    b.Navigation("Zahtjevis");
                });
#pragma warning restore 612, 618
        }
    }
}
